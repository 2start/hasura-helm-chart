apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "hasura-helm3-chart.fullname" . }}
  labels:
{{ include "hasura-helm3-chart.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hasura-helm3-chart.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hasura-helm3-chart.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      volumes:
        - name: git-repo
          emptyDir: { }
        - name: ssh-key
          secret:
            secretName: {{ quote .Values.hasura.gitSshKey }}
            defaultMode: 0600
      initContainers:
        - name: git-clone
          image: alpine/git # Any image with git will do
          command: ["/bin/sh", "-c"]
          args:
          {{- if .Values.hasura.gitRepository }}
            - echo "Initialize hasura with {{ .Values.hasura.gitRepository }}";
              {{- if .Values.hasura.gitSshKey }}
              echo "Load ssh key..";
              export GIT_SSH_COMMAND='ssh -i /repo/repo-ssh/git-ssh-key -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes';
              {{ end }}
              echo "init/update repo..";
              if cd repo; then git pull; else git clone --single-branch -- {{ .Values.hasura.gitRepository }} /repo; fi;
          {{- else }}
              echo "No repo specified.";
              mkdir -p /repo/{{ .Values.hasura.migrationsDir  }} && mkdir -p /repo/{{ .Values.hasura.metadataDir  }};
          {{- end }}
          securityContext:
            runAsUser: 1 # Any non-root user will do. Match to the workload.
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: git-repo
              mountPath: /repo
            - name: ssh-key
              readOnly: true
              mountPath: '/root/repo-ssh/'
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: HASURA_GRAPHQL_ENABLE_CONSOLE
            value: {{ quote .Values.hasura.enableConsole  }}
          - name: HASURA_GRAPHQL_METADATA_DATABASE_URL
            value: {{ .Values.hasura.metadataDatabaseUrl  }}
          - name: HASURA_GRAPHQL_ADMIN_SECRET
            value: {{ .Values.hasura.adminSecret }}
          - name: HASURA_GRAPHQL_METADATA_DIR
            value: /repo/{{ .Values.hasura.metadataDir  }}
          - name: HASURA_GRAPHQL_MIGRATIONS_DIR
            value: /repo/{{ .Values.hasura.migrationsDir }}
          {{- if .Values.hasura.authHook }}
          - name: HASURA_GRAPHQL_AUTH_HOOK
            value: {{ .Values.hasura.authHook }}
          {{- end }}
          - name: HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS
            value: {{ quote .Values.hasura.enableRemoteSchemaPermissions }}
          {{- if .Values.envAsMultiline -}}
          {{- range (split "\n" .Values.envAsMultiline) }}
          - name: "{{ (split "=" .)._0 }}"
            value: "{{ (split "=" .)._1 }}"
          {{- end }}
          {{- end }}
          volumeMounts:
            - name: git-repo
              mountPath: /repo
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          {{- if .Values.livenessProbePath }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbePath }}
              port: http
          {{- end }}
          {{- if .Values.readinessProbePath }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbePath }}
              port: http
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
